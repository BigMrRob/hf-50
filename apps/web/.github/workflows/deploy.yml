name: Deploy Web App to Lightsail

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # If you do NOT truly need ARM, remove "linux/arm64"
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hf50-web:latest
          cache-from: |
            type=gha,scope=prod
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/hf50-web:buildcache
          cache-to: |
            type=gha,scope=prod,mode=max
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/hf50-web:buildcache,mode=max
          build-args: |
            NODE_ENV=production

      - name: Deploy to Lightsail
        uses: docker://amazon/aws-cli:2.13.33
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        with:
          entrypoint: /bin/sh
          args: >-
            -c '
            yum install -y jq >/dev/null 2>&1 || true

            echo "Fetching current container definitions..."
            CURRENT_CONTAINERS=$(aws lightsail get-container-services \
              --service-name hf50-service \
              --query "containerServices[0].currentDeployment.containers" \
              --output json 2>/dev/null || echo "{}")

            # Extract any existing docs environment so we do not overwrite BookStack
            DOCS_ENV=$(echo "$CURRENT_CONTAINERS" | jq -r ".docs.environment | @json" 2>/dev/null)
            if [ "$DOCS_ENV" = "null" ] || [ -z "$DOCS_ENV" ]; then
              DOCS_ENV="{
                \"APP_URL\": \"https://docs.huntfish50.click\",
                \"APP_KEY\": \"***\",
                \"APP_ENV\": \"production\",
                \"APP_DEBUG\": \"true\",
                \"DB_CONNECTION\": \"mysql\",
                \"DB_HOST\": \"***\",
                \"DB_PORT\": \"***\",
                \"DB_DATABASE\": \"***\",
                \"DB_USERNAME\": \"***\",
                \"DB_PASSWORD\": \"***\",
                \"MAIL_ENABLED\": \"false\",
                \"STORAGE_TYPE\": \"local\",
                \"CACHE_DRIVER\": \"file\",
                \"SESSION_DRIVER\": \"file\"
              }"
            fi

            # Our web environment
            WEB_ENV="{\"NODE_ENV\":\"production\"}"

            echo "Creating new deployment with both containers..."
            aws lightsail create-container-service-deployment \
              --service-name hf50-service \
              --containers "{
                \"web\": {
                  \"image\": \"$DOCKERHUB_USERNAME/hf50-web:latest\",
                  \"environment\": $WEB_ENV,
                  \"ports\": {\"3000\": \"HTTP\"}
                },
                \"docs\": {
                  \"image\": \"$DOCKERHUB_USERNAME/hf50-docs:latest\",
                  \"environment\": $DOCS_ENV,
                  \"ports\": {\"80\": \"HTTP\"}
                }
              }" \
              --public-endpoint "{
                \"containerName\": \"web\",
                \"containerPort\": 3000,
                \"healthCheck\": {
                  \"healthyThreshold\": 2,
                  \"unhealthyThreshold\": 2,
                  \"timeoutSeconds\": 2,
                  \"intervalSeconds\": 5,
                  \"path\": \"/\",
                  \"successCodes\": \"200-499\"
                }
              }"

            echo "Waiting for deployment to be active..."
            aws lightsail wait container-service-deployments-active \
              --service-name hf50-service

            echo "Updating domain mappings for both containers..."
            aws lightsail update-container-service \
              --service-name hf50-service \
              --public-domain-names "{
                \"web\": [\"web.huntfish50.click\"],
                \"docs\": [\"docs.huntfish50.click\"]
              }"
            '
